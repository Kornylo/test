package com.example.tests;

import java.util.concurrent.TimeUnit;
import org.testng.annotations.*;
import static org.testng.Assert.*;
import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.ie.InternetExplorerDriver;

public class Untitled {
  private WebDriver driver;
  private boolean acceptNextAlert = true;
  private StringBuffer verificationErrors = new StringBuffer();

  @BeforeClass(alwaysRun = true)
  public void setUp() throws Exception {
    driver = new FirefoxDriver();
    driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);
  }

  @Test
  public void testUntitled() throws Exception {
    driver.get("https://www.instagram.com/");
    assertEquals(driver.getTitle(), "Instagram");
    driver.findElement(By.linkText("Log in")).click();
    driver.findElement(By.name("username")).clear();
    driver.findElement(By.name("username")).sendKeys("kornulo@gmail.com");
    driver.findElement(By.name("password")).clear();
    driver.findElement(By.name("password")).sendKeys("maluy013");
    driver.findElement(By.xpath("//span[@id='react-root']/section/main/article/div[2]/div/div/form/span/button")).click();
    driver.findElement(By.linkText("Find People")).click();
    driver.findElement(By.cssSelector("div._gvoze")).click();
    
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    Twenty_Steps();
    
 

}

  private void click_or_next() {
		if(driver.findElement(By.cssSelector("span._8scx2.coreSpriteHeartOpen")).isDisplayed()){     
	        driver.findElement(By.cssSelector("span._8scx2.coreSpriteHeartOpen")).click();   
	        driver.findElement(By.linkText("Next")).click();
	        System.out.println("clicked next"); 
	    } else 
	    	driver.findElement(By.linkText("Next")).click(); 
		    System.out.println(" next"); 
		    
	    }

private void Twenty_Steps() {
	click_or_next();   
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();   
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();   
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();   
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();
    click_or_next();
}



 

  @AfterClass(alwaysRun = true)
  public void tearDown() throws Exception {
    driver.quit();
    String verificationErrorString = verificationErrors.toString();
    if (!"".equals(verificationErrorString)) {
      fail(verificationErrorString);
    }
  }

  private boolean isElementPresent(By by) {
    try {
      driver.findElement(by);
      return true;
    } catch (NoSuchElementException e) {
      return false;
    }
  }

  private boolean isAlertPresent() {
    try {
      driver.switchTo().alert();
      return true;
    } catch (NoAlertPresentException e) {
      return false;
    }
  }

  private String closeAlertAndGetItsText() {
    try {
      Alert alert = driver.switchTo().alert();
      String alertText = alert.getText();
      if (acceptNextAlert) {
        alert.accept();
      } else {
        alert.dismiss();
      }
      return alertText;
    } finally {
      acceptNextAlert = true;
    }
  }
}
